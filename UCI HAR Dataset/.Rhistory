a
a()
install.packages("ggplot2")
install.packages("devtools")
library(ggplot2)
search()
find.package("devtool")
install.packages("devtools")
find.package("devtool")
library(devtools)
library(slidify)
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
library(rJava)
### Week 4 - Assignment
setwd("~/Desktop/Getting and Cleaning Data/Week 4/Assignment/UCI HAR Dataset")
## Reading the data for test
library(data.table)
testData <- fread("./test/X_test.txt", sep = " ")       # these are the preprocessed data without column names
features <- fread("features.txt", sep = " ")            # this is the data defining the comunm names to be added to the data
activitiesTestID <- fread("./test/Y_test.txt", sep = " ")   # these are the activities ID to be added to the data
usersTest <- fread("./test/subject_test.txt", sep = " ")    # there are the subjects ID (persons who performed the test) to be added to the data
## Adding the Names of the columns, based on the features.txt file (variable "features" in the code)
featuresNamesTest <- as.character(features$V2)              # I set the V2 column in my features dataframe as a character vector, in order to use it to assign the names of the variables
colnames(testData) <- featuresNamesTest                     # I assign the columns names to "testData" via the featureNames vector (character vector of length 561)
## Adding the values from "activitiesID" to "testData".
library(plyr)
testData[, activity:= activitiesTestID$V1]
## Adding the values from "users" to "testData".
testData[, user := usersTest$V1]
## Reading the data for train
trainData <- fread("./train/X_train.txt", sep = " ")                    # these are the preprocessed data without column names
activitiesTrainID <- fread("./train/Y_train.txt", sep = " ")            # these are the activities ID to be added to the data
usersTrain <- fread("./train/subject_train.txt", sep = " ")             # there are the subjects ID (persons who performed the test) to be added to the data
## Adding the Names of the columns, based on the features.txt file (variable "features" in the code)
featuresNamesTrain <- as.character(features$V2)                         # I set the V2 column in my features dataframe as a character vector, in order to use it to assign the names of the variables
colnames(trainData) <- featuresNamesTrain                               # I assign the columns names to "testData" via the featureNames vector (character vector of length 561)
## Adding the values from "activitiesID" to "testData".
trainData[, activity:= activitiesTrainID$V1]
# Adding the values from "users" to "testData".
trainData[, user := usersTrain$V1]
## Merging the 2 objects "testData" et "TrainData" in one : "totalData
totalData <- rbind(testData, trainData)
## Extract the mean and standard deviation values for each measurement
meanStdData <- totalData[, grep("mean|std|user|activity", names(totalData)), with = FALSE]
## Name the activities in the data set using the file "activity_labels.txt"
activityLabels <- fread("activity_labels.txt", sep = " ")
meanStdData$activity = activityLabels$V2[match(meanStdData$activity, activityLabels$V1)]
### TEST OK
## Name all variables with descriptive names
#names(meanStdData) <- gsub("-","", names(meanStdData))
names(meanStdData) <- gsub("-|\\(|\\)","", names(meanStdData))
names(meanStdData) <- gsub("^f|freq","Frequency", names(meanStdData))
names(meanStdData) <- gsub("^t","Time", names(meanStdData))
names(meanStdData) <- gsub("Acc|acc","Accelerometer", names(meanStdData))
names(meanStdData) <- gsub("Gyro","Gyroscope", names(meanStdData))
names(meanStdData) <- gsub("std","StandardDeviation", names(meanStdData))
names(meanStdData) <- gsub("mean","Mean", names(meanStdData))
names(meanStdData) <- gsub("BodyBody|body","Body", names(meanStdData))
names(meanStdData) <- gsub("gravity","Gravity", names(meanStdData))
names(meanStdData) <- gsub("Mag|mag","Magnitude", names(meanStdData))
names(meanStdData) <- gsub("X$","Xdirection", names(meanStdData))
names(meanStdData) <- gsub("Y$","Ydirection", names(meanStdData))
names(meanStdData) <- gsub("Z$","Zdirection", names(meanStdData))
names(meanStdData) <- gsub("Jerk|jerk","Jerk", names(meanStdData))
names(meanStdData) <- gsub("Freq","Frequency", names(meanStdData))
names(meanStdData) <- gsub("activity","Activity", names(meanStdData))
names(meanStdData) <- gsub("user","User", names(meanStdData))
### TEST OK
## create a new data set with mean for all values for each subjects and each activity
#calculate mean for all measurements for each subject and each activity
tidyDataSet <- aggregate(. ~Activity + User, meanStdData, mean)
## create a new file .txt
write.table(tidyDataSet, file = "tidyData.txt", sep = " ", row.names = FALSE, col.names = TRUE)
colnames(tidyDataSet)
dim(tidyDataSet)
x <- fread("tidyData.txt", sep = " ", header = TRUE)
x
x
dim(x)
